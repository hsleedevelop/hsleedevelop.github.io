{"componentChunkName":"component---src-templates-post-template-tsx","path":"/Functional, lazy protocol","result":{"pageContext":{"html":"<p>source: <a href=\"https://medium.com/swift-programming/using-lazy-to-delay-computation-8aa4ea236d0a\">https://medium.com/swift-programming/using-lazy-to-delay-computation-8aa4ea236d0a</a></p>\n<p>{% highlight swift %}</p>\n<p>/// Avoid creating multiple layers of <code>LazySequence</code> wrapper.\n/// Anything conforming to <code>LazySequenceProtocol</code> is already lazy.\nextension LazySequenceProtocol {\n/// Identical to <code>self</code>.\npublic var lazy: Self { get }\n}</p>\n<p>let array2 = [1, 2, 4, 5, 3, 7]\nlet element = array2.map{ $0 * 2 }[3] //7 times\nprint(element)</p>\n<p>let array3 = [1, 2, 4, 5, 3, 7]\nlet element3 = array3.lazy.map{ $0 * 2 }[3] //2 times\nprint(element3)</p>\n<p>{% endhighlight %}</p>","title":"Functional, lazy protocol","date":"Feb 12, 2018","category":"swift"}}}