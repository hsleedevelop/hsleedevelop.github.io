{"componentChunkName":"component---src-templates-post-template-tsx","path":"/Protocol Extension - function's implementation cannot be overridden by a subclass","result":{"pageContext":{"html":"<p><a href=\"https://bugs.swift.org/browse/SR-103\">source</a></p>\n<p>Protocol Extension: function's implementation cannot be overridden by a subclass  </p>\n<p>A function(x') is not called that we thought If there is following conditions.  </p>\n<p>A protocol(A) is defined a function(x).<br>\nA has implement of x in the protocol extension.<br>\nA class(B) is implement A, but doesn't have implement x.<br>\nA subclass(C) is inheritance B, and have implement x(x').<br>\nA instance of C typed A, and call x.  </p>\n<pre><code>// Defined protocol.\nprotocol A {\n    func a() -> Int\n}\nextension A {\n    func a() -> Int {\n        return 0\n    }\n}\n\n// A class doesn't have implement of the function.\nclass B: A {}\n\nclass C: B {\n    func a() -> Int {\n        return 1\n    }\n}\n\n// A class has implement of the function.\nclass D: A {\n    func a() -> Int {\n        return 1\n    }\n}\n\nclass E: D {\n    override func a() -> Int {\n        return 2\n    }\n}\n\n// Failure cases.\nB().a() // 0\nC().a() // 1\n(C() as A).a() // 0 # We thought return 1.\n\n// Success cases.\nD().a() // 1\n(D() as A).a() // 1\nE().a() // 2\n(E() as A).a() // 2\n</code></pre>","title":"Protocol Extension - function's implementation cannot be overridden by a subclass"}}}